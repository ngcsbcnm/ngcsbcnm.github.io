[{"title":"物理层","date":"2023-07-28T03:07:05.000Z","url":"/2023/07/28/%E7%89%A9%E7%90%86%E5%B1%82/","tags":[["408","/tags/408/"],["计算机网络","/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"]],"categories":[["undefined",""]],"content":"一、物理层基本概念物理层考虑的是怎样才能在连接各种计算机的传输媒体上传输数据比特流，而不是指具体的传输媒体现有的计算机网络中的硬件设备和传输媒体的种类非常繁多，而通信手段有许多不同方式，物理层的作用正是要尽可能的屏蔽掉这些传输媒体和通讯手段的差异，使物理层上面的数据链路层感觉不到这些差异，这样就可使数据链路层只需要考虑如何完成本层的协议和服务，而不必考虑网络具体的传输媒体和通讯手段是什么。计算机网络体系结构中的物理层，就是要解决在各种传输媒体上传输比特 0 和 1 的问题，进而给数据链路层提供透明传输比特流的服务 可以将物理层的主要任务描述为确定与传输媒体到接口有关的一些特性： (1) 机械特性：接口所用接线器的形状和尺寸、引脚数目和排列、固定和锁定装置等 (2) 电气特性：接口电路的各条线上出现的电压范围 (3) 功能特性：某条线上出现某一电平电压的意义 (4) 过程特性：对于不同功能的各种可能事件的出现顺序 二、物理层下面的传输媒体1. 导引型传输媒体 同轴电缆 双绞线需要记住绞合的作用：抵御外界电磁波干扰、减少相邻导线的电磁干扰 光纤 2. 非导引型传输媒体可以利用利用电磁波在自由空间的传播来传送信息 短波通信（即高频通信）主要是靠电离层的反射，但短波信道的通信质量较差，传输速率低 微波在空间主要是直线传播传统微波通信有两种方式： 地面微波接力通信 卫星通信 无线局域网使用的 ISM 频段 要使用某一段无线电频谱进行通信，通常必须得到本国政府有关无线电频谱管理机构的许可证。但是，也有一些无线电频段是可以自由使用的。例如：ISM。各国的 ISM 标准有可能略有差别。 三、传输方式1. 串行传输、并行传输串行传输：数据是一个比特一个比特依次发送的，只需要一条数据传输线路 并行传输：一次发送 n 个比特，需要 n 条传输线路 并行传输是速度是串行传输的 n 倍，但是成本高 在计算机网络中，数据远距离传输使用串行传输，计算机内部的数据传输，常使用并行传输 2. 同步传输、异步传输1. 同步传输同步传输：数据块以稳定的比特流形式传输，字节之间没有间隔，接收端在每个比特的中间时刻进行检测，以判别接收到的是比特0或是比特1。 由于不用设备的时钟频率存在差异，传输大量数据时，所产生判别时刻的累计误差会导致对比特信号的判别错位，需要采取方式使双方时钟同步。 实现收发双方时钟同步的方法 外同步：在收发双方之间添加一条单独的时钟信号线 内同步：发送端将时钟同步信号编码到发送数据中一起传输（例如传统以太网所采用的曼切斯特编码） 2. 异步传输异步传输：以字节为独立的传输单位，字节之间的时间间隔不是固定的。接收端仅在每个字节的起始处对字节内的比特实现同步。为此通常在每个字节的前后分别加上起始位和结束位。 字节之间异步（字节之间的时间间隔不固定） 字节中的每个比特仍然要同步（各比特的持续时间相同） 3. 单向通信、双向交替通信、双向同时通信1. 单向通信（单工）单向通信：又称单工通信，通信双发只有一个传输方向 例如，无线电广播就采取这种方式 2. 双向交替通信（半双工）双向交替通信：通信双方可以互相传输数据，但不能同时进行 例如，对讲机采取此通信方式 3. 双向同时通信（全双工）双向同时通信：通信双方可以同时发送和接收信息 例如，电话采取此通信方式单向通信需要一个信道，而双向交替通信、双向同时通信需要两个信道（每个方向各一个） 四、编码与调制1. 编码、调制、码元概念在计算机网络中，计算机需要处理和传输用户的文字、图片、音频和视频，它们可以统称为 消息。数据是运送消息的实体。计算机中的网卡将比特0和1变换成相应的 电信号 发送到网线，也就是说 信号是数据的电磁表现。 由信源发出的原始电信号称为 基带信号 ，基带信号分为 数字基带信号、模拟基带信号 两类。信号需要在信道中传输，信道可分为 数字信道和 模拟信道 两种。 编码 把数字信号转换为另一种数字信号，在数字信道中传输，称为 编码。例如，以太网使用 曼切斯特编码，4B&#x2F;5B，8B&#x2F;10B 等编码 将模拟信号转换为数字信号，在数字信道中传输，也称为 编码。例如，对音频信号进行编码的脉码调制 PCM 常见编码有 归零编码、不归零编码、曼彻斯特编码、差分曼彻斯特编码 调制 将数字信号转换为模拟信号，在模拟信道中传输，称为 调制。例如，WIFI 采用补码键控、直接序列扩频、正交频分复用等调制方式 将模拟信号转换为另一种模拟信号，在模拟信道中传输，也称为 调制。例如，语音数据加载到模拟的载波信号中传输 码元 码元是指在使用时间域的波形表示数字信号时，代表不同离散数值的基本波形。简单来说码元就是一段调制好的基本波形，可以表示比特信息 2. 常用编码1. 不归零编码（NRZ）：存在同步问题所谓不归零，就是指在整个码元时间内，电平不会出现零电平 需要额外一根传输线来传输时钟信号，接收方按时钟信号的节拍来逐个接收码元 由于不归零编码存在同步问题，因此计算机网络中的数据传输不采用此类编码 2. 归零编码（RZ）：自同步，编码效率低每个码元传输结束后信号都要 “归零”，所以接收方只要在信号归零后进行采样即可，不需要单独的时钟信号。 实际上，归零编码相当于将时钟信号用 “归零” 方式编码在了数据之内，这种称为 “自同步” 信号 但是，归零编码中大部分的数据带宽都用来传输 “归零” 而浪费 3. 曼彻斯特编码在每个码元时间的中间时刻，信号都会发生跳变。例如，负跳变表示比特 1，正跳变表示比特 0。 码元中间时刻的跳变既表示时钟，又表示数据 传统以太网就使用的曼切斯特编码 4. 差分曼彻斯特编码：比曼彻斯特编码变化少，更适合较高的传输速率 跳变仅表示时钟 码元开始处电平是否发生变化表示数据 补充： 反向不归零编码NRZI 编码（Non Return Zero Inverted Code），即反向不归零编码。其实NRZI编码方式非常的简单，即信号电平翻转表示 0，信号电平不变表示 1。 例如想要表示00100010(B)，则信号波形如下图所示： 3. 基本调制方法 基本调制属于二元制，也就是只能调制出两种基本波形，每种波形表示1比特的信息量 基本调制包括 调幅AM、调频FM、调相PM。调幅信号有两种不同振幅的基本波形构成；调频信号由两种不同频率的基本波形构成；调相信号由两种不同初相位的基本波形构成 如果要使一个码元包含多个比特信息，可以采用混合调制的方法 4. 混合调制混合调制，属于多元制，也就是可以调制出多种基本波形因为频率和相位是相关的，即频率是相位随时间的变化率，所以一次只能调制频率和相位中的一个。通常情况下，相位和振幅可以结合起来一起调制，称为 正交振幅调制 QAM。 举例：正交振幅调制 QAM-16 可以调制出 12 种相位 每种相位有 1 或 2 种振幅可选 因此共可以调制出 16 种码元（波形），每种码元可以对应表示 4 个比特 码元与 4 个比特的对应关系不能随便定义，应采用格雷码。任意两个相邻码元之间只有 1 个比特不同 五、信道极限容量1. 信号失真信号在传输过程中会受到各种因素的影响，使得信号波形失去码元之间的清晰界限，这种现象称为 码间串扰 ，如图 造成信号失真的因素 码元传输速率 信号传输距离 噪声干扰 传输媒体质量 2. 奈氏准则、香农公式奈奎斯特（Nyquist）定理又称 奈氏准则 码元传输速率 又称为 波特率、调制速率、波形速率 或 符号速率。它与比特比特率的关系： 当1个码元只携带 1 比特的信息量时，则波特率（码元&#x2F;秒）与比特率（比特&#x2F;秒）在数值上是相等的 当1个码元携带 n 比特的信息量时，则波特率转换成比特率时，数值要乘以 n 要提高信息传输速率(比特率)，就必须设法使每一个码元能携带更多个比特的信息量。这需要采用多元制，例如 QAM-16 实际信道所能传输的码元速率，要明显低于奈氏准则给出的上限值。奈氏准则是理想条件下推导的，没有考虑传输距离、噪声干扰等因素 信道带宽或信道中信噪比越大，信道的极限传输速率越高 在实际信道上能够达到的信息传输速率要比该公式的极限传输速率低不少。这是因为在实际信道中，信号还要受到其他一些损伤，如各种脉冲干扰、信号在传输中的衰减和失真等，这些因素在香农公式中并未考虑 在信道带宽一定的情况下，根据奈氏准则和香农公式，要想 提高信息的传输速率 就必须采用 多元制（更好的调制方法）和努力 提高信道中的信噪比 自从香农公式发表后，各种新的信号处理和调制方法就不断出现，其目的都是为了尽可能地接近香农公式给出的传输速率极限 "},{"title":"计算机网络三种交换方式（电路交换，报文交换，分组交换）及其优缺点","date":"2023-07-28T02:24:01.000Z","url":"/2023/07/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B8%89%E7%A7%8D%E4%BA%A4%E6%8D%A2%E6%96%B9%E5%BC%8F%EF%BC%88%E7%94%B5%E8%B7%AF%E4%BA%A4%E6%8D%A2%EF%BC%8C%E6%8A%A5%E6%96%87%E4%BA%A4%E6%8D%A2%EF%BC%8C%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2%EF%BC%89%E5%8F%8A%E5%85%B6%E4%BC%98%E7%BC%BA%E7%82%B9/","tags":[["408","/tags/408/"],["计算机网络","/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"]],"categories":[["undefined",""]],"content":"1、电路交换 电路交换三个步骤： 建立连接（分配通信资源） 通话（一直占用通信资源） 释放（连接归还通信资源） 当使用电路交换来传送计算机数据时,其线路的传输效率往往很低。 （电路交换就好比，你在跟一个人打电话的时候，首先你得知道别人的电话号码；然后，你拨号，这个时候就是在请求连接。当对方接了电话，你们两个之间就建立了一条通路，只有你们两个可以用，人后你们就可以聊天。别人现在跟你打电话也不能和你搭上线，只能等你打完电话，；等你打完之后，你们两之间的通路就断了，比人就可以跟你打电话了）因为用户在通话过程中一直占用资源，该资源也不能被其他用户使用，浪费了很多资源，所以传输效率低。所以，计算机网络一般采用分组交换，而不是电路交换 电路交换的一般过程：在使用电路交换通话之前，必须先拨号请求建立连接。当被叫用户听到交换机送来的振铃并摘机后，从主叫端到被叫端就建立了一条连接，也就是一条专用的物理通路，这条链接保证了双方通话时所需的通信资源，而这些资源在双方通信时不会被其他用户占用，此后主机和被叫双方就能互相通话。通话完毕后，交换机释放刚才使用过的这条专用的物理通路（即把刚才占用的所有通信资源归还给电信网）。 电路交换必须是面向对象的 交换就是按照某种方式动态的分配传输线路的资源。（含义：连接） 建立连接（占用通信资源）——通话（一直占用通信资源）——释放连接（归还通信资源），三个步骤的交换方式称为电路交换 在通话的全部时间内，通话的两个用户始终占用端到端的通信资源 电路交换的优缺点 优点： 由于通信线路为通信双方用户专用，数据直达，所以传输数据的时延非常小。 通信双方之间的物理通路一旦建立，双方可以随时通信，实时性强。 双方通信时按发送顺序传送数据，不存在失序问题。 电路交换既适用于传输模拟信号，也适用于传输数字信号。 电路交换的交换设备（交换机等）及控制均较简单。 缺点： 电路交换时，数据直达，不同类型、不同规格、不同速率的终端很难相互进行通信，也难以在通信过程中进行差错控制。 电路交换的平均连接建立时间对计算机通信来说嫌长。 电路交换连接建立后，物理通路被通信双方独占，即使通信线路空闲，也不能供其他用户使用，因而信道利用低。 交换数据时，其线路的传输效率往往很低。这是因为计算机数据是突发式地出现在传输线路上的，传输数据的时间往往不到10%甚至1% 2、分组交换分组交换采用的是存储转发技术，通常我们将表示消息的整块数据称为报文，在发送消息前，先将报文拆成一个个更小的等长数据段，在数据段前加上首部（一些信息，如目的地址等），构成一个分组，其简称为包，相应的首部也称为包头。 路由器为分组交换机： 缓存分组 转发分组 发送方任务为： 构造分组（将较长） 发送分组 接收方任务： 接收分组 还原报文 分组交换示意图： 首部包含了：目的地址，源地址等重要控制信息主机是为用户进行信息处理的，并且可以和其他主机通过网络交换信息。路由器则是用来转发分组的，即进行分组交换的。路由器收到一个分组，先暂时存储一下，检查其首部查找转发表，按照首部中的目的地址，找到合适的接口转发出去，把分组交给下一个路由器。这样一步步地以存储转发的方式把分组交付最终的目的主机。 分组交换的优缺点 优点： 高效。在分组传输的过程中动态分配传输宽带，对通信链路是逐段占用。 灵活。为每一个分组独立的选择最合适的转发路由。 迅速。以分组作为传送单位，可以不先建立连接，就能像其他主机发送分组。 可靠。保证可靠性的网络协议；分布式多路由的分组交换网，使网络有很好的生存性 缺点： 尽管分组交换比报文交换的传输时延少，但仍存在存储转发时延，而且其结点交换机必须具有更强的处理能力。 分组交换与报文交换一样，每个分组都要加上源、目的地址和分组编号等信息，使传送的信息量大约增大5%～10%，一定程度上降低了通信效率，增加了处理的时间，使控制复杂，时延增加。 当分组交换采用数据报服务时，可能出现失序、丢失或重复分组，分组到达目的结点时，要对分组按编号进行排序等工作，增加了麻烦。若采用虚电路服务，虽无失序问题，但有呼叫建立、数据传输和虚电路释放三个过程。 3、报文交换同分组交换类似，报文交换中交换节点也采用存储转发方式，相当于寄一封信出去，填好地址后，把内容全部放到信封里，一站一站的发送到目的地址。但区别是：报文交换对报文大小没有限制。 这就要求交换节点需要更多缓存空间，报文交换一般用于早期电报通信网，现在计算机更多使用分组交换。 报文交换的优缺点 优点 报文交换不需要为通信双方预先建立一条专用的通信线路，不存在连接建立时延，用户可随时发送报文。 由于采用存储转发的传输方式，使之具有下列优点： 在报文交换中便于设置代码检验和数据重发设施，加之交换结点还具有路径选择，就可以做到某条传输路径发生故障时，重新选择另一条路径传输数据，提高了传输的可靠性； 在存储转发中容易实现代码转换和速率匹配，甚至收发双方可以不同时处于可用状态。这样就便于类型、规格和速度不同的计算机之间进行通信； 提供多目标服务，即一个报文可以同时发送到多个目的地址，这在电路交换中是很难实现的； 允许建立数据传输的优先级，使优先级高的报文优先转换。 通信双方不是固定占有一条通信线路，而是在不同的时间一段一段地部分占有这条物理通路，因而大大提高了通信线路的利用率。 缺点： 由于数据进入交换结点后要经历存储、转发这一过程，从而引起转发时延（包括接收报文、检验正确性、排队、发送时间等），而且网络的通信量愈大，造成的时延就愈大，因此报文交换的实时性差，不适合传送实时或交互式业务的数据。 报文交换只适用于数字信号。 由于报文长度没有限制，而每个中间结点都要完整地接收传来的整个报文，当输出线路不空闲时，还可能要存储几个完整报文等待转发，要求网络中每个结点有较大的缓冲区。为了降低成本，减少结点的缓冲存储器的容量，有时要把等待转发的报文存在磁盘上，进一步增加了传送时延。 4、电路交换、报文交换、分组交换对比 电路交换——整个报文的比特流连续地从源点直达终点，好像在一个管道中传输 报文交换——整个报文先传送到相邻结点，全部存下来后查找转发表，转发到下一个结点分组交换——单个分组（整个报文的一部分）传送到相邻结点，存储下来后查找转发表，转发到下一个结点 若要传送的数据量很大，且其传送时间远大于连接建立时间，则采用电路交换较为合适。 当端到端的通路有很多段的链路组成时，采用分组交换传送数据较为合适。 从提高整个网络的信道利用率上看，报文交换和分组交换优于电路交换，其中分组交换比报文交换的时延小，尤其适合于计算机之间的突发式的数据通信 "},{"title":"计算机网络体系结构","date":"2023-07-27T15:40:06.000Z","url":"/2023/07/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/","tags":[["408","/tags/408/"],["计算机网络","/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"]],"categories":[["undefined",""]],"content":"1、 计算机网络体系计算机网络体系结构分为3种：OSI体系结构(七层)，TCP&#x2F;IP体系结构(四层)，五层体系结构。 OSI体系结构: 概念清楚，理论也比较完整，但是它既复杂又不实用。 TCP&#x2F;IP体系结构:TCP&#x2F;IP是一个四层体系结构，得到了广泛的运用。 五层体系结构:为了方便学习，折中OSI体系结构和TCP&#x2F;IP体系结构，综合二者的优点，这样既简洁，又能将概念讲清楚。 TCP&#x2F;IP与OSI最大的不同在于：OSI是一个理论上的网络通信模型，而TCP&#x2F;IP则是实际运行的网络协议。 2、五层网络体系结构概述看一下五层网络体系结构各层的主要功能： 应用层：应用层是网络协议的最高层，主要任务通过进程间的交互完成特定网络应用。应用层协议定义的是应用程序（进程）间通信和交互的规则。 对于不同的网络应用需要有不同的应用层协议，在互联网中的应用层协议很多，如域名系统DNS，支持万维网应用的HTTP协议，支持电子邮件的SMTP协议，等等。应用层交互的数据单元称为报文。 运输层：有时也译为传输层，它负责为两台主机中的进程提供通信服务。该层主要有以下两种协议： 传输控制协议 (Transmission Control Protocol，TCP)：提供面向连接的、可靠的数据传输服务，数据传输的基本单位是报文段（segment）； 用户数据报协议 (User Datagram Protocol，UDP)：提供无连接的、尽最大努力的数据传输服务，但不保证数据传输的可靠性，数据传输的基本单位是用户数据报。 网络层：网络层负责为分组网络中的不同主机提供通信服务，并通过选择合适的路由将数据传递到目标主机。在发送数据时，网络层把运输层产生的报文段或用户数据封装成分组或 包进行传送。在TCP&#x2F;IP体系中，由于网络层使用IP协议，因此分组也叫IP数据报。 数据链路层：数据链路层通常简称为链路层。数据链路层在两个相邻节点传输数据时，将网络层交下来的IP数据报组装成帧，在两个相邻节点之间的链路上传送帧。 物理层：保数据可以在各种物理媒介上进行传输，为数据的传输提供可靠的环境。 以下是应用进程的数据在各层之间的传递过程中所经历的变化的简单示意图： 3、TCP&#x2F;IP体系结构概述TCP&#x2F;IP的体系结构比较简单，只有四层。 层次名称 单位 功能 协议 应用层 负责实现一切与应用程序相关的功能，对应OSI参考模型的上三层 FTP（文件传输协议） HTTP（超文本传输协议） DNS（域名服务器协议）SMTP（简单邮件传输协议）NFS（网络文件系统协议） 传输层 报文段 负责提供可靠的传输服务，对应OSI参考模型的第四层 TCP（控制传输协议） UDP（用户数据报协议） 网络层 数据报 负责网络间的寻址数据传输，对应OSI参考模型的第三层 IP（网际协议） ICMP（网际控制消息协议）ARP（地址解析协议） RARP（反向地址解析协议） 网络接口 帧 负责实际数据的传输，对应OSI参考模型的下两层 HDLC（高级链路控制协议）PPP（点对点协议） SLIP（串行线路接口协议） 这种四层协议数据交换的示意图如下： 4、三种模型对比"},{"title":"计算机网络的性能指标","date":"2023-07-27T14:52:56.000Z","url":"/2023/07/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9A%84%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/","tags":[["408","/tags/408/"],["计算机网络","/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"]],"categories":[["undefined",""]],"content":"1、 速率 率是指连接在计算机网络上的主机在数字信道上传送数据的速率。是计算机网络中最重要的一个性能指标。又称为数据率(data rate)或比特率(bit rate) ，速率的单位是bit&#x2F;s(比特每秒)。Bit 来源于 binary digit，意思是一个“二进制数字”，因此一个比特就是二进制数字中的一个 1 或 0。 当数据率较高时，就常常在bit&#x2F;s的前面加上一个字母。 例如千，兆，，等等。 这样就可以写成。 速率往往是指额定速率或标称速率，并非网络上实际上运行的速率。 2、 带宽 带宽：本意是指某个信号具有的频带宽度信号的带宽是指该信号所包含的各种不同频率成分所占据的频率范围。 在计算机网络中，带宽指网络的通信线路传送数据的能力（单位时间内从网络中的某一个点到另外一个点所能通过的最高数据率,带宽的单位为bit&#x2F;s）。 补充：带宽有两种不同的意义，在带宽的上述描述中，前者为频域称谓，而后者为时域称谓，其本质是相同的。也就是说，一条通信链路，带宽越宽，所能传输的最高数据率也越高。 3、吞吐量 吞吐量表示单位时间内通过某个网络（通信线路、接口）的实际的数据量。 吞吐量受制于带宽或者网络的额定速率。 例如：对于一个1Gbit&#x2F;s的以太网，意味着其额定速率为1Gbit&#x2F;s，那么这个数值也是该以太网的吞吐量的绝对上限值。 4、时延时延(delay 或 latency)是指数据（一个报文或分组，甚至比特）从网络(或链路)的一端传送到另一端所需的时间。有时也称为延迟或迟延。 时延是由以下几个不同的部分组成的： 时延 解释 发送时延 主机或路由器发送数据帧所需要的时间 传播时延 电磁波在信道中传播一定的距离需要花费的时间 处理时延 主机或者路由器接受到分组时要花费一定的时间去处理 排队时延 分组在网络传输时，进入路由器后要在输入队列中排队等待处理，路由器确定转发接口后，还要在输出队列中排队等待转发，这就是排队时延 为了更好的理解，如下图： （1）发送时延 是从发送数据帧的第一个比特算起,到该帧的最后一个比特发送完毕所需的时间计算公式： （2）传播时延电磁波在信道中需要传播一定的距离而花费的时间。计算公式为： （3）处理时延交换结点为存储转发而进行一些必要的处理所花费的时间。处理时延与结点的性能和处理方法有关。 （4）排队时延分组在进入结点输入缓存中排队等待处理和处理后在输出缓存中排队等待转发所经历的时延。排队时延的长短往往取决于网络中当时的通信量。 当网络的通信量很大时若发生队列溢出，使分组丢失，相当于排队时延为无穷大。 发送速率和传播速率我们必须弄清楚这个概念，对于高速网络链路，我们提高的不是比特在链路上的传播速率，而是数据的发送速率。载荷信息的电磁波在通信线路上的传播速率取决于通信线路的介质材料。提高数据的发送速率只是减少了数据的发送时延。因此：我们通常所说的”光纤信道的传输速率高“是指可以用很高的速率向光纤信道发送数据，而光纤信道的传播速率实际上还要比铜线的传播速率略低一点。 5、时延带宽积时延带宽积指传播时延*带宽，表示一条链路上传播的所有比特（以比特为单位）。如下图，将管道的长度看做链路的传播时延，管道的截面积是链路的带宽，则时延带宽积代表管道的体积，即表示这样的链路可以容纳多少个比特不难看出，管道中的比特数表示从发送端发出的但未到达接收端的比特（因此链路的时延带宽积又称为以比特为单位的链路长度）。 对于一条正在传送数据的链路，只有在代表链路的管道都充满比特时，链路才得到了充分的利用。 6、往返时间RTT往返时延 RTT (Round-Trip Time) 表示从发送端发送数据开始，到发送端收到来自接收端的确认（接收端收到数据后立即发送确认），总共经历的时延。 7、利用率 信道利用率指出某信道有百分之几的时间是被利用的（有数据通过）。完全空闲的信道的利用率是零。 网络利用率则是全网络的信道利用率的加权平均值。 信道利用率并非越高越好。 这是因为：根据排队论的理论，当某信道的利用率增大时，该信道引起的时延也迅速增加。如果令表示网络空闲时的时延，D表示网络当前的时延，那么在适当的假定条件下，可以用下面的简单公式来表示D，和利用率U之间的关系： 这里U是网络的利用率，数值在0到1之间。 因此，信道或网络的利用率过高会产生非常大的时延。 8、丢包率丢包率即分组丢失率，是指在一定的时间范围内，传输过程中丢失的分组数量与总分组数量的比率。 丢包率分为： 接口丢包率 结点丢包率 链路丢包率 路径丢包率 网络丢包率 分组丢失主要存在两种情况： 分组在传输过程中出现误码 分组到达一台队列已满的分组交换机时被丢弃;在通信量较大时就可能造成网络拥塞。 "},{"title":"计算机网络（1）——概念、组成、功能和分类","date":"2023-07-27T14:28:30.000Z","url":"/2023/07/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%881%EF%BC%89%E2%80%94%E2%80%94%E6%A6%82%E5%BF%B5%E3%80%81%E7%BB%84%E6%88%90%E3%80%81%E5%8A%9F%E8%83%BD%E5%92%8C%E5%88%86%E7%B1%BB/","tags":[["408","/tags/408/"],["计算机网络","/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"]],"categories":[["undefined",""]],"content":" 1.计算机网络的概念计算机网络：是一个将分散的、具有独立功能的计算机系统，通过通信设备与线路连接起来，由功能完善的软件实现资源共享和信息传递的系统。 通信设备通常指交换机和路由器。 线路就是端系统和通信系统所连接的一个介质。 有线传输介质：双绞线、同轴电缆、光纤等。 无限传输介质：卫星、无线电波、微波等。 2.计算机网络的功能 数据通信 资源共享（分为硬件共享、软件共享、数据共享） 分布式处理（多台计算机各自承担同一工作任务的不同部分） 提高可靠性 负载均衡 3.计算机网络的组成 计算机网络由硬件、软件、协议组成。 硬件：主机（端系统）、双绞线、光纤、通信设备等。 软件：安装在端系统的应用软件。 协议：一系列规则、约定的集合。 工作方式：边缘部分：用户直接使用（又分为C&#x2F;S方式和P2P方式）。核心部分：为边缘部分服务（包括路由器和大量的网络）。 功能组成 数据通信 资源共享 具体分为通信子网（数据通信）和资源子网（资源共享&#x2F;数据处理） 4.计算机网络的分类按分布范围划分： 广域网WAN（大跨度，通常使用交换技术） 城域网MAN（城市） 局域网LAN（1km左右，通常使用广播技术） 个人区域网PAN（个人使用设备） 按使用者划分： 公用网（电信、移动、联通等） 专用网（军队、政府、银行等） 按交换技术划分： 电路交换 报文交换 分组交换 按拓扑结构划分： 按传输技术划分： 广播式网络（共享公共通信信道） 点对点网络（使用分组存储转发和路由选择机制） "},{"title":"test","date":"2023-07-27T07:31:56.000Z","url":"/2023/07/27/test/","tags":[["高数","/tags/%E9%AB%98%E6%95%B0/"]],"categories":[["undefined",""]],"content":""},{"title":"Hello World","date":"2023-07-27T06:18:07.479Z","url":"/2023/07/27/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"},{"title":"笔试题","date":"2023-04-06T09:54:50.000Z","url":"/2023/04/06/%E7%AC%94%E8%AF%95%E9%A2%98/","tags":[["java","/tags/java/"]],"categories":[["undefined",""]],"content":"1.当请求过多，超出线程池负荷的时候，会触发拒绝策略。下列选项中，对于拒绝策略的描述错误的是（ C ）：A. CallerRunsPolicy，线程调用运行该任务的 execute 本身，此策略提供简单的反馈控制机制，能够减缓新任务的提交速度。B. AbortPolicy，处理程序遭到拒绝将直接抛出异常，丢弃任务。C. DiscardPolicy，不能执行的任务将被删除。这种策略将丢弃任务，同时也会抛出异常。D. DiscardOldestPolicy，如果执行程序尚未关闭，则位于工作队列头部的任务将被删除，然后重试执行程序。 解析线程池拒绝策略： （1） AbortPolicy 。丢弃任务，并抛出RejectedExecutionException异常，线程池默认拒绝策略； （2） DiscardPolicy。丢弃任务，不抛出异常； （3） DiscardOldesPolicy.丢弃队列最前面的任务，然后重新提交被拒绝的任务； （4） CallerRunPolicy。由调用的线程处理该任务，谁调用谁的线程处理。 2.下列关于AOP术语的描述中，错误的是（ A ）：A. Joinpoint，是指目标对象上所定义的各个方法。B. Pointcut，是用来定义当前的横切逻辑准备织入到哪些连接点上。C. Advice，用来定义横切逻辑，即在连接点上准备织入什么样的逻辑。D. Aspect，是一个用来封装切点和通知的组件。 解析 连接点（Joinpoint）连接点描述的是程序执行的某个特定位置。如一个类的初始化前、初始化后，或者类的某个方法调用前、调用后、方法抛出异常后等等。一个类或一段程序代码拥有一些具有边界性质的特定点，这些特定点就称为连接点。连接点用来定义在目标程序的哪里通过AOP加入新的逻辑。 Spring仅支持方法的连接点，即仅能在方法调用前、方法调用后、方法抛出异常时以及方法调用前后这些程序执行点织入增强。连接点由两个信息确定：第一是用方法表示的程序执行点；第二是用相对点表示的方位。执行点：即程序执行流程中的某个点。如执行某个语句或者语句块、执行某个方法、装载某个类、抛出某个异常…… 切入点（Pointcut）切入点是一个连接点的过滤条件，AOP 通过切点定位到特定的连接点。每个类都拥有多个连接点：例如 UserService类中的所有方法实际上都是连接点，即连接点是程序类中客观存在的事物。类比：连接点相当于数据库中的记录，切点相当于查询条件。切点和连接点不是一对一的关系，一个切点匹配多个连接点，切点通过 org.springframework.aop.Pointcut 接口进行描述，它使用类和方法作为连接点的查询条件。 通知（Advice）切面在某个具体的连接点采取的行为或行动，称为通知。切面的核心逻辑代码都写在通知中，有人也称之为增强或者横切关注点。通知是切面功能的具体实现，通常是业务代码以外的需求，如日志、验证等，这些被模块化的特殊对象。常用的通知接口有 前置通知：org.springframework.aop.MethodBeforeAdvice后置通知：org.springframework.aop.AfterReturningAdvice异常通知：org.springframework.aop.ThrowsAdvice该接口没有要实现的方法，需要自定义一个afterThrowing()方法。环绕通知：org.aopalliance.intercept.MethodInterceptor 通知器（Advisor）通知器由一个切入点（pointcut）和一个通知（Advice）组成。通知就是增强的那部分功能代码，如记录日志代码、控制权限代码。 切面（Aspect）与通知器（advisor）类似都是通知+切入点。区别在于，切面中的类无需实现通知接口，但需要在配置文件中指定类中的方法名；而通知器仅需指定类名即可，因为通知器中的类都实现了通知接口，很明确的知道通知方法是哪个。 目标(Target)被通知的对象（方法） 代理(Proxy)向目标对象应用通知之后创建的对象 3.JVM中有很多垃圾回收策略，其中会用到很多垃圾收集器，如果我们将垃圾收集器的作用范围划分为新生代和老年代的话，那么以下哪个选项中的所有收集器的作用域是属于老年代（B）A. Serial收集器、ParNew收集器、Paraller Scavenge收集器B. Serial Old收集器、Paraller Old收集器、CMS收集器C. Serial Old收集器、Paraller Old收集器、Paraller Scavenge收集器D. CMS收集器、ParNew收集器、Paraller Scavenge收集器 解析这个主要考察各个收集器的作用域，A选项中所有收集器的作用域是新生代，B选项中所有收集器的作用域是老年代，C、D选项各有错误。年轻代：serial GC、parNew GC、paraller Scavenge GC老年代：serial old GC 、paraller old GC、CMS 4.下面几项关于Java程序初始化的几个原则：①静态对象（变量）优先于非静态对象（变量）初始化；②父类优先于子类进行初始化；③按照成员变量的定义顺序进行初始化；其中正确的有：（D）A. ①②B. ①③C. ②③D. ①②③ 解析java程序中的初始化顺序可以归纳为： 静态成员变量和静态代码块的初始化顺序。 实例成员变量和实例代码块的初始化顺序。 构造方法的初始化顺序。 需要注意的是，在Java程序中存在继承关系时，初始化顺序还需要遵循特定的规则，即先初始化父类的静态成员变量和静态代码块，然后是子类的静态成员变量和静态代码块，接着是父类的实例成员变量和实例代码块，最后是子类的实例成员变量和实例代码块。 5.以下哪个不是分布式锁的实现方式（B）A. 使用数据库乐观锁实现B. 使用数据库悲观锁实现C. 使用redis的setnx()、expire()方法，用于分布式锁D. 基于Zookeeper实现分布式锁 解析使用数据库悲观锁实现不是分布式锁的实现方式，悲观锁通常是在单个数据库实例上使用的，而分布式锁是为了协调不同进程或不同节点之间的资源访问而设计的。分布式锁的实现方式可以使用数据库乐观锁、Redis的setnx()、Zookeeper等技术实现。 6.对于数列4、5、6、7、9、12、18、23，如果采用折半查找元素9，请问需要查找几次？（B）A. 2B. 3C. 4D. 5 解析4、5、6、7、9、12、18、23 Array[(0 + n - 1) &#x2F; 2] 小于 9, (0 + n - 1) &#x2F; 2 &#x3D; 3 Array[(3 + 1 + n - 1) &#x2F; 2] 大于 9, (3 + 1 + n - 1) &#x2F; 2 &#x3D; 5 Array[(3 + 1 + 5 - 1) &#x2F; 2] 等于 9所以, 一共3次 7.现有一字符串”hello world”，使用哈夫曼编码最少使用多少bit内存：（B）A. 4B. 32C. 64D. 88 8.已知现有一个大小为4初始状态为空的栈，现在有一组数据经过这个栈后，最终的数据顺序是:2 5 4 1 3,问原始的进栈数据不可能是以下的哪组:(D)A. 1 4 5 2 3B. 5 2 3 1 4C. 3 4 5 2 1D. 4 1 3 5 2 解析9.假设有一张表test,表中存放着全国的城市信息以及其所在的省份,现在要以每个省份包含名称以’州’为结尾的城市数量降序排序,包含相同数量的省份以省份名称降序拍戏,最终输出第二多以及第三多的省份以及数量,那么下面正确的sql语句是（B） A. select province, count() c from test where city like ‘%州’ group by province order by c desc, province desc limit 2,1B. select province, count() c from test where city like ‘%州’ group by province order by c desc, province desc limit 1,2C. select province, count() c from test where city like ‘州%’ group by province order by c desc, province desc limit 2,1D. select province, count() c from test where city like ‘州%’ group by province order by c desc, province desc limit 1,2"},{"title":"中值定理","date":"2023-03-24T14:39:47.000Z","url":"/2023/03/24/%E4%B8%AD%E5%80%BC%E5%AE%9A%E7%90%86/","tags":[["高数","/tags/%E9%AB%98%E6%95%B0/"]],"categories":[["undefined",""]],"content":"罗尔定理具体地，如果函数 满足以下条件： 在闭区间 [a,b] 内连续； 在开区间 (a,b) 内可导； 。 则存在至少一个点，使得。 证明： 在闭区间连续，则在是有界的，即存在最小值 m,和最大值 M， 使得，若 m&#x3D;M,则为常数函数，可得,满足证明要求，若 ,又因为，则(a,b)区间至少存在一点,使得或,因此区间存在一点为极大值点或极小值点，则存在至少一个点 ，使得 。 拉格朗日中值定理设函数在闭区间 上连续，在开区间 内可导，则存在点 使得： 证明定义辅助函数令 ,即曲线方程减去 ab 直线方程，其中 是函数在区间 [a,b] 上的平均斜率（即直线 AB 的斜率），g(x) 代表的是函数 f(x) 相对于直线 AB 的偏差。 求辅助函数在区间端点的取值 此时要求出 和 的值。 求辅助函数的导数根据题设，可知在内可导 ，所以也在 内可导。现在对 在内求导得： 根据罗尔定理，如果一个函数在闭区间 [a,b] 内连续，在开区间 (a,b) 内可导，并且在 a 和 b 处的函数值相等，那么在 (a,b) 内至少存在一个点 ，使得 。因为 g(a) &#x3D; g(b)，所以 g(x) 满足罗尔定理的所有条件，可以找到一个点 ，使得。 得出拉格朗日中值定理的结论 因为 ，所以。将等式两侧乘以， 得： 因此，存在一个点，使得，即拉格朗日中值定理成立。 柯西中值定理设满足在区间连续，在内可导，，则存在使得 证明构造函数 由于因此存在一点使得 所以 因此，即柯西中值定理成立。 泰勒公式1. 带拉格朗日余项的 n 阶泰勒公式设在处具有阶导数，则有带拉格朗日余项的 n 阶泰勒公式： 其中，为拉格朗日余项，具体形式为： 其中，介于和之间。 2.带配亚诺余项的 n 阶泰勒公式设在处具有阶导数，则有带配亚诺余项的阶泰勒公式： 其中，为配亚诺余项，具体形式为： "},{"title":"导数与微分","date":"2023-03-19T11:58:04.000Z","url":"/2023/03/19/%E5%AF%BC%E6%95%B0%E4%B8%8E%E5%BE%AE%E5%88%86/","tags":[["高数","/tags/%E9%AB%98%E6%95%B0/"]],"categories":[["undefined",""]],"content":"导数定义假设有一个平面直角坐标系，其中点是一条函数的图像上的一点。 如果从沿着正方向移动一个很小的量，对应的值分别为和。那么，通过点和该点的邻近点可以画出一条直线， 记为。当趋近于时，越来越接近于函数上的一条直线，这条直线称为函数在点处的切线。函数在这一点的导数为这条切线的斜率，表示为： 也可以写成 如果这个极限存在，那么函数在处可导，否则在处不可导。如果函数在其定义域内每一点都可导，那么这个函数就是可导的函数。 微分定义微分是导数概念的扩展，它描述的是函数在某点处的局部变化情况，也是微积分中的基本概念之一。 对于函数，在处微分表示在处的变化量，即： 其中是函数在处的导数，是自变量的增量。 将微分与自变量的增量的关系写成极限形式： 可以看出，微分就是函数在处的变化量随着自变量增量的极限。微分也可以表示为 ，其中表示自变量的增量。 微分和导数之间的关系非常密切，可以用微分来计算导数，也可以用导数来计算微分。 对于函数，其微分和第一种导数定义的关系可以表示为： 这意味着微分在某种程度上等价于函数在处的增量。"},{"title":"函数的连续与间断","date":"2023-03-19T05:50:19.000Z","url":"/2023/03/19/%E5%87%BD%E6%95%B0%E7%9A%84%E8%BF%9E%E7%BB%AD%E4%B8%8E%E9%97%B4%E6%96%AD/","tags":[["高数","/tags/%E9%AB%98%E6%95%B0/"]],"categories":[["undefined",""]],"content":"连续点的定义设函数在的某个邻域内有定义，则是的连续点， 当且仅当 ，即在点左右极限都存在且相等于。 间断点的定义与分类1.可去间断点在这类间断点处，函数在该点左右极限存在且相等，但该点的函数值与极限值不相等。 例如，函数在处有一个可去间断点。 2.跳跃间断点在这类间断点处，函数在该点左右极限存在，但两侧极限不相等。 例如，函数（的底部函数）在所有整数点上都有跳跃间断点。 3.无穷间断点在这类间断点处，函数在该点左或右至少一个极限不存在或为无穷大。 例如，函数在处有一个无穷间断点。 4.混合间断点在这类间断点处，函数同时满足上述多种间断点性质。 例如，函数在所有整数点上都有混合间断点。"},{"title":"函数极限","date":"2023-03-19T05:46:05.000Z","url":"/2023/03/19/%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%90/","tags":[["高数","/tags/%E9%AB%98%E6%95%B0/"]],"categories":[["undefined",""]],"content":"函数极限定义设是一个实函数，是实数，若对于任意给定的正实数， 存在正实数，使得当满足时，都成立，其中为常数，则称是函数当趋近于时的极限，记为。 注：如果一个函数在趋近于的过程中极限为， 那么可以使用如下形式来表示该函数： 其中，为函数在趋近于时的极限，为一个无穷小量， 其极限为0。换句话说，当无限接近于时，的值趋近于。这种表示方式称为是使用极限运算符表示函数，它表示了当趋近于的时候，与其极限的差异可以被看作一个无穷小量。这个无穷小量通常是一个关于的表达式，但其值的大小可以被看作趋近于。 使用这种表示方法有助于分析函数在附近的行为，以及它的变化趋势。 函数极限性质1.唯一性如果存在，则该极限唯一。 2.保号性若，且（或）， 则存在a的某个邻域，使得在该邻域内，或。 3.局部有界性若，则存在一个正数和正实数， 使得当时，。换句话说，函数在点的某个去心邻域内是有界的。 海涅定理设是定义在区间上的函数，。 则的充分必要条件是： 对于的任何一个收敛于的数列，都有。 也就是说，如果函数在处极限存在， 那么对于的任何一组趋近于的数列，这组数列在下的极限都存在， 且这两个极限相等。反之，如果函数在处极限不存在，则存在的一个数列， 使得该数列收敛于，但不存在。 无穷小定义在数学中，无穷小是指一个数列或者函数，如果它在某一点处的极限等于零，那么就称该数列或函数在该点处是无穷小。具体地说， 对于函数，如果，则称函数在点处为无穷小。 无穷小的定义有多种等价表述方式，其中一种是：如果对于任意正实数，都存在正实数，使得当满足时， 有，则称函数在点处为无穷小。 无穷小可以是正无穷小、负无穷小和趋于零的无穷小。一个序列或者函数在某点处为无穷小，意味着在这个点附近，它的取值非常的小（接近于零），可以用来描述相对变化率微小的情况或者某些极限中的近似情况。 无穷小运算规则1.有限常数与无穷小的乘积也是无穷小。具体而言，如果是一个常数，是无穷小，那么也是无穷小。 这条规则可以表示为，其中的是”量级为f(x)的无穷小”的意思。 2.有限常数与无穷小的和差仍是无穷小。具体而言，如果和是两个常数，和分别是两个无穷小， 那么也是一个无穷小。同样地，也是一个无穷小。 这两条规则可以表示为： ， 。 其中的是和的上确界。 3.无穷小的乘积是无穷小。具体而言，如果和是两个无穷小，那么也是一个无穷小。 这个规则的表达式为。 4.无穷小的幂次是无穷小。具体而言，如果是一个无穷小，是一个正整数（）， 那么（的次方）也是一个无穷小。 这个规则的表达式为。 需要注意的是，这些运算规则中的等号并不是严格的等式，而是“等价”的关系。例如， 等于，意思是两个量级在一定意义上是等价的，但精确的数值大小还是要根据实际情况来判断。 常用的等价无穷小当趋近于零时， ，， ，，， ，。 当趋近于零时，，。这些等价无穷小可以方便地处理指数函数的极限和近似计算。 当x趋近于零时，。这个等价无穷小可以应用于某些复杂的极限计算中。 当x趋近于零时，，，，。这些等价无穷小可以方便地处理双曲函数的极限和近似计算。"},{"title":"数列极限","date":"2023-03-17T11:55:49.000Z","url":"/2023/03/17/%E6%95%B0%E5%88%97%E6%9E%81%E9%99%90/","tags":[["高数","/tags/%E9%AB%98%E6%95%B0/"]],"categories":[["undefined",""]],"content":"1. 数列极限定义设为一数列，若存在常数，对正整数， 使得当n&gt;N时，恒成立，则称数是数列的极限， 或者称数列收敛与，记为 定理： 若数列收敛，则其任何子列也收敛， 且 2.收敛数列的性质唯一性：给出数列若则是唯一的。有界性：若数列极限存在，则数列有界。保号性：设数列存在极限a，且a&gt;0(或a&lt;0),则存在正整数N，当n&gt;N时，有或 3.夹逼准则如果数列满足 且 则 4.单调有界准则单调有界数列必有极限，即若数列单调增加减少且有上界下界 则存在"},{"title":"tmux和vim","date":"2023-03-04T13:53:05.000Z","url":"/2023/03/04/tmux%E5%92%8Cvim/","tags":[["Linux","/tags/Linux/"]],"categories":[["undefined",""]],"content":"tmux tmux操作 vim教程"},{"title":"树的遍历","date":"2023-02-20T11:54:38.000Z","url":"/2023/02/20/%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86/","tags":[["递归","/tags/%E9%80%92%E5%BD%92/"],["BFS","/tags/BFS/"],["树的遍历","/tags/%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86/"]],"categories":[["undefined",""]],"content":"题目一个二叉树，树中每个节点的权值互不相同。现在给出它的后序遍历和中序遍历，请你输出它的层序遍历。 输入格式第一行包含整数 N，表示二叉树的节点数。 第二行包含 N个整数，表示二叉树的后序遍历。 第三行包含 N个整数，表示二叉树的中序遍历。 输出格式输出一行 N个整数，表示二叉树的层序遍历。 数据范围1≤N≤30官方并未给出各节点权值的取值范围，为方便起见，在本网站范围取为 1∼N。 输入样例 输出样例 "},{"title":"Linux常用文件管理命令","date":"2023-02-20T10:36:27.000Z","url":"/2023/02/20/Linux%E5%B8%B8%E7%94%A8%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4/","tags":[["Linux","/tags/Linux/"]],"categories":[["undefined",""]],"content":"取消命令并换行 清空本行命令 补全命令和文件名 显示目录下的文件 显示当前路径 进入目录 复制文件 创建目录 删除文件 移动文件 创建文件 展示文件 复制文本 粘贴文本 ​ "}]